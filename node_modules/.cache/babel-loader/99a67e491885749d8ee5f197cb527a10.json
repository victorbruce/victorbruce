{"ast":null,"code":"import _classCallCheck from \"/home/bruce/Projects/victorbruce.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bruce/Projects/victorbruce.github.io/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bruce/Projects/victorbruce.github.io/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bruce/Projects/victorbruce.github.io/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bruce/Projects/victorbruce.github.io/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bruce/Projects/victorbruce.github.io/src/components/CountDown/countDown.jsx\";\nimport React, { Component } from \"react\";\nimport Clock from \"../Clock/clock\";\n\nvar CountDown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CountDown, _Component);\n\n  function CountDown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CountDown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CountDown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      deadline: \"31 January, 2019\",\n      status: \"\",\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n\n    _this.handleCountDown = function () {\n      setInterval(function () {\n        var deadlineDate = new Date(_this.state.deadline).getTime();\n        var now = new Date().getTime();\n        var distance = deadlineDate - now;\n\n        if (distance < 0) {\n          _this.setState({\n            status: \"Expired\"\n          });\n        }\n\n        _this.setState({\n          days: Math.floor(distance / (1000 * 60 * 60 * 24)),\n          hours: Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)),\n          minutes: Math.floor(distance % (1000 * 60 * 60) / (1000 * 60)),\n          seconds: Math.floor(distance % (1000 * 60) / 1000)\n        });\n      }, 1000);\n    };\n\n    return _this;\n  }\n\n  _createClass(CountDown, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          days = _this$state.days,\n          hours = _this$state.hours,\n          minutes = _this$state.minutes,\n          seconds = _this$state.seconds,\n          status = _this$state.status;\n      var countDown = \"Expired\";\n\n      if (status === \"\") {\n        countDown = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(Clock, {\n          days: days,\n          hours: hours,\n          minutes: minutes,\n          seconds: seconds,\n          onCountDown: this.handleCountDown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Count-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, countDown);\n    }\n  }]);\n\n  return CountDown;\n}(Component);\n\nexport default CountDown;","map":{"version":3,"sources":["/home/bruce/Projects/victorbruce.github.io/src/components/CountDown/countDown.jsx"],"names":["React","Component","Clock","CountDown","state","deadline","status","days","hours","minutes","seconds","handleCountDown","setInterval","deadlineDate","Date","getTime","now","distance","setState","Math","floor","countDown"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;IAEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,kBADJ;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,IAAI,EAAE,CAHA;AAINC,MAAAA,KAAK,EAAE,CAJD;AAKNC,MAAAA,OAAO,EAAE,CALH;AAMNC,MAAAA,OAAO,EAAE;AANH,K;;UASRC,e,GAAkB,YAAM;AACtBC,MAAAA,WAAW,CAAC,YAAM;AAChB,YAAMC,YAAY,GAAG,IAAIC,IAAJ,CAAS,MAAKV,KAAL,CAAWC,QAApB,EAA8BU,OAA9B,EAArB;AACA,YAAMC,GAAG,GAAG,IAAIF,IAAJ,GAAWC,OAAX,EAAZ;AACA,YAAME,QAAQ,GAAGJ,YAAY,GAAGG,GAAhC;;AAEA,YAAIC,QAAQ,GAAG,CAAf,EAAkB;AAChB,gBAAKC,QAAL,CAAc;AAAEZ,YAAAA,MAAM,EAAE;AAAV,WAAd;AACD;;AACD,cAAKY,QAAL,CAAc;AACZX,UAAAA,IAAI,EAAEY,IAAI,CAACC,KAAL,CAAWH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAnB,CADM;AAEZT,UAAAA,KAAK,EAAEW,IAAI,CAACC,KAAL,CACJH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAT,IAAsC,OAAO,EAAP,GAAY,EAAlD,CADK,CAFK;AAKZR,UAAAA,OAAO,EAAEU,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,IAAiC,OAAO,EAAxC,CAAX,CALG;AAMZP,UAAAA,OAAO,EAAES,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC;AANG,SAAd;AAQD,OAhBU,EAgBR,IAhBQ,CAAX;AAiBD,K;;;;;;;6BAEQ;AAAA,wBAC2C,KAAKb,KADhD;AAAA,UACCG,IADD,eACCA,IADD;AAAA,UACOC,KADP,eACOA,KADP;AAAA,UACcC,OADd,eACcA,OADd;AAAA,UACuBC,OADvB,eACuBA,OADvB;AAAA,UACgCJ,MADhC,eACgCA,MADhC;AAEP,UAAIe,SAAS,GAAG,SAAhB;;AAEA,UAAIf,MAAM,KAAK,EAAf,EAAmB;AACjBe,QAAAA,SAAS,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AACE,UAAA,IAAI,EAAEd,IADR;AAEE,UAAA,KAAK,EAAEC,KAFT;AAGE,UAAA,OAAO,EAAEC,OAHX;AAIE,UAAA,OAAO,EAAEC,OAJX;AAKE,UAAA,WAAW,EAAE,KAAKC,eALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAWD;;AACD,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGU,SADH,CADF;AAKD;;;;EApDqBpB,S;;AAuDxB,eAAeE,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Clock from \"../Clock/clock\";\n\nclass CountDown extends Component {\n  state = {\n    deadline: \"31 January, 2019\",\n    status: \"\",\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n\n  handleCountDown = () => {\n    setInterval(() => {\n      const deadlineDate = new Date(this.state.deadline).getTime();\n      const now = new Date().getTime();\n      const distance = deadlineDate - now;\n\n      if (distance < 0) {\n        this.setState({ status: \"Expired\" });\n      }\n      this.setState({\n        days: Math.floor(distance / (1000 * 60 * 60 * 24)),\n        hours: Math.floor(\n          (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n        ),\n        minutes: Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)),\n        seconds: Math.floor((distance % (1000 * 60)) / 1000)\n      });\n    }, 1000);\n  };\n\n  render() {\n    const { days, hours, minutes, seconds, status } = this.state;\n    let countDown = \"Expired\";\n\n    if (status === \"\") {\n      countDown = (\n        <div>\n          <Clock\n            days={days}\n            hours={hours}\n            minutes={minutes}\n            seconds={seconds}\n            onCountDown={this.handleCountDown}\n          />\n        </div>\n      );\n    }\n    return (\n      <div className=\"Count-down\">\n        {countDown}\n      </div>\n    );\n  }\n}\n\nexport default CountDown;"]},"metadata":{},"sourceType":"module"}